/*
 *  @name           Inline Labels
 * 
 *  @version        TODO
 *
 *  @description    Adds or Removes the default value of a text input based on focus() state.  
 *                  Optionally uses the input field's label as its default value
 *
 *  @author         Taylan Pince, Monika Piotrowicz 
 *
 */
$.namespace("trapeze.InlineLabel");
trapeze.InlineLabel=$.Class.extend({$form:null,$field:null,$label_field:null,initial_value:null,tmp_label:"",focus:function(a){a=$(a.currentTarget);a.val().toLowerCase()=="["+a.data("default_val").toLowerCase()+"]"&&a.val("").removeClass(this.conf.class_name)},blur:function(a){a=$(a.currentTarget);var b=a.val().toLowerCase(),c=a.data("default_val").toLowerCase();if(b==""||b==c||b=="["+c+"]")a.val("["+a.data("default_val")+"]").addClass(this.conf.class_name)},beforeSubmit:function(a){$(a.currentTarget).find("input."+this.conf.class_name+
", textarea."+this.conf.class_name).each(function(b,c){b=$(c);if(b.val()=="["+b.data("default_val")+"]")if(b.data("default_origin")=="label")b.val("");else b.data("default_origin")=="value"&&b.val(b.data("default_val"))})},setDefault:function(a,b){a=$obj=$(a);var c=a.val(a.get(0).defaultValue).addClass(this.conf.class_name).data("default_origin","value").val();b=b||$obj.parents("form");if(a.val()=="")if(b=b.find('label[for="'+a.attr("id")+'"]')){a.data("default_origin","label");c=b.text();this.conf.remove_label&&
b.remove()}a.data("default_val",c).val("["+c+"]");a.focus($.proxy(this.focus,this)).blur($.proxy(this.blur,this))},setElement:function(a){var b=$(a),c=null;if(b.is("form")){b.find("input:text, textarea").each($.proxy(function(e,d){this.setDefault(d,b)},this));c=b}else if(b.is("input:text")||b.is("textarea")){c=b.parents("form");this.setDefault(a,c)}c&&c.bind("submit",$.proxy(this.beforeSubmit,this))},init:function(a){this.conf=$.extend({},{selector:null,class_name:"inline-label",remove_label:true},
a);$(this.conf.selector).each($.proxy(function(b,c){this.setElement(c)},this))}});
